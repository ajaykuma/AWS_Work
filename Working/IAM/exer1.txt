AWS IAM
-------
#Users

AWS console > Add user

User name* >add 1 or multple users

Select AWS access type:
--Select AWS credential type* - Access Key- programmatic access
				Password - AWS management console access(chosen)

--Console password - Autogenerated (preferable)
                     Custom

--Require password reset - 'users must create a new password at next sign-in'

> Next permissions
Add users to group  | Copy permissions from existing user | Attach existing policies directly

> Next

> Tags (to organize)

> Review (at this point users have no permissions , which we will setup soon)

Create users
--shows the AWS Management Console link to use to sign in by users.

--------------------
Note** If programmatic access was chosen then user will showup with 'Access key ID' & 'Secret access key"

===================
#Groups

User groups > Create group

--Developers > add one of the user to this group
--skip permissions-- for now
>Create group

Similarly
--Testers > add one of the user to this group
--skip permissions-- for now
>Create group

--Admin > add one of the user to this group
--skip permissions-- for now
>Create group

===================
#Roles

Roles 
- Similar to a user (an identity with permissions)
- Does not have credentials (password or keys)
- Assumable, temporarily, by anyone who needs it
- An IAM role automatically deploys AWS credentials to resources that assume it.

create role > say EC2 instances need to access CloudWatch & S3
 choose a use case > common use cases > EC2 > Next: permissions > Attach policies 
--search for cloudwatch i.e. CloudWatchLogsFullAccess
--search for s3 and then attach ..AmazonS3ReadOnlyAccess

<skip> tags
Next: Review
Role name: somename
Role description: 
		<create role>

Test it!
--start EC2 instance & test if it can access S3 and CloudWatch from there without any credentials.
===================
#Policies
-who can do what to which resource and when

Look into existing policies..
Select any existing policy>AdministratorAccess

Policy summary | {} JSON

or AmazonS3ReadOnlyAccess
--shows read only access on s3 buckets..

Policies can be attached to WHO(USER | GROUP | ROLE)

For a user, we could 'Add permission' directly > Attach existing policies directly
--but better to add at a group level in which 1 or more users belong

> click on group to which user belongs to or directly go into 'User Groups' option
Permissions > Add permissions > Attach policies > search for s3 > AmazonS3ReadOnlyAccess > add

similarly we can do it for other groups.

================

 



